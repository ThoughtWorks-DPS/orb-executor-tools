---
version: 2.1

orbs:
  executor-tools: twdps/executor-tools@dev:<<pipeline.git.revision>>
  op: twdps/onepassword@3.0.0

globals:
  - &context orb-publishing

commands:

  set-environment:
    steps:
      - op/env:
          env-file: op.env

  echo-message:
    parameters:
      msg:
        type: string
    steps:
      - run:
          name: echo msg
          command: echo "<< parameters.msg >>"

  check-artifacts:
    parameters:
      filename:
        description: name of artifact file to confirm
        type: string
    steps:
      - run:
          name: validate build log artifact
          command: |
            #!/usr/bin/env bash
            set -eo pipefail

            echo "validate file:<< parameters.filename >> exists"
            if [ -f "<< parameters.filename >>" ]; then
              echo "<< parameters.filename >> contents"
              cat "<< parameters.filename >>"
            else
              echo "File << parameters.filename >> does not exist."
              exit 1
            fi

jobs:

  test non-install commands:
    docker:
      - image: twdps/circleci-executor-builder:alpine-stable
    steps:
      - checkout
      - setup_remote_docker
      - set-environment
      - executor-tools/lint:
          dockerfile: test/Dockerfile.alpine
          hadolint-additional-args: "--ignore DL3004"
      - executor-tools/confirm-registry
      - executor-tools/build:
          dockerfile: test/Dockerfile.build
          image: twdps/orb-executor-tools
      - check-artifacts:
          filename: workspace/build_log.txt
      - executor-tools/snyk-scan:
            image: twdps/orb-executor-tools
            tag: dev.${CIRCLE_SHA1:0:7}
            dockerfile: test/Dockerfile.build
            snyk-severity-threshold: medium
            snyk-organization: twdps
      - check-artifacts:
          filename: workspace/snyk_log.txt
      - executor-tools/trivy-scan:
            image: twdps/orb-executor-tools
            tag: dev.${CIRCLE_SHA1:0:7}
            dockerfile: test/Dockerfile.build
      - check-artifacts:
          filename: workspace/trivy_log.txt
      - executor-tools/grype-scan:
            image: twdps/orb-executor-tools
            tag: dev.${CIRCLE_SHA1:0:7}
            dockerfile: test/Dockerfile.build
      - check-artifacts:
          filename: workspace/grype_log.txt
      - executor-tools/bats:
            image: twdps/orb-executor-tools
            tag: dev.${CIRCLE_SHA1:0:7}
            bats-run-container-name: orb-executor-tools-test
            bats-entry-point: /bin/ash
            bats-test-path: test/circleci_remote_docker_alpine.bats
      - executor-tools/set-labels:
            dockerfile: test/Dockerfile.build

  test versioned machine package installs:
    machine:
      image: ubuntu-2204:current
    resource_class: medium
    steps:
      - checkout
      - executor-tools/install:
          bats-version: 1.10.0
          hadolint-version: 2.12.0
          snyk-version: 1.1268.0
          trivy-version: 0.48.2
          grype-version: 0.74.0
          cosign-version: 2.2.1
          syft-version: 1.4.0
          oras-version: 1.2.0
          gren-version: 0.17.1
          op-version: 2.29.0
          vault-version: 1.15.6-1
      - run:
          name: confirm installed version for available packages
          command: |
            set -exo pipefail
            bats --version | grep "1.10.0"
            hadolint --version | grep "2.12.0"
            snyk --version | grep "1.1268.0"
            trivy --version | grep "0.48.2"
            grype --version | grep "0.74.0"
            cosign version | grep "2.2.1"
            syft version | grep "1.4.0"
            oras version | grep "1.2.0"
            gren --version | grep "0.17.1"
            op --version | grep "2.29.0"
            vault version | grep "1.15.6"

  test machine package installs using latest:
    machine:
      image: ubuntu-2204:current
    resource_class: medium
    steps:
      - checkout
      - executor-tools/install:
          bats-version: latest
          hadolint-version: latest
          snyk-version: latest
          trivy-version: latest
          grype-version: latest
          cosign-version: latest
          syft-version: latest
          oras-version: latest
          gren-version: latest
          op-version: latest
          vault-version: latest
      - run:
          name: confirm installed version for available packages
          command: |
            set -exo pipefail
            bats --help | grep "bats"
            hadolint --help | grep "hadolint"
            snyk --help | grep "Snyk"
            trivy --help | grep "trivy"
            grype --help | grep "grype"
            cosign --help | grep "cosign"
            syft --help | grep "syft"
            oras --help | grep "oras"
            gren --help | grep "gren"
            op --help | grep "1Password"
            vault --help | grep "vault"

workflows:

  integration tests:
    jobs:
      - test versioned machine package installs

      - test machine package installs using latest

      - test non-install commands:
          context: *context

      - executor-tools/machine-executor-dev-release:
          name: test machine executor dev release
          context: *context
          op-version: latest
          snyk-version: latest
          bats-version: latest
          hadolint-version: latest
          trivy-version: latest
          grype-version: latest
          dockerfile: test/Dockerfile.build
          image: twdps/orb-executor-tools
          snyk-scan: true
          snyk-severity-threshold: medium
          snyk-organization: twdps
          trivy-scan: true
          grype-scan: true
          bats-test: true
          bats-run-container-name: orb-executor-tools-test
          bats-entry-point: /bin/ash
          bats-test-path: test/circleci_remote_docker_alpine.bats
          opencontainer-labels: true
          security-scan-nofail: true
          after-checkout:
            - set-environment
            - echo-message:
                msg: "after checkout"
          before-build:
            - echo-message:
                msg: "before build"
          after-build:
            - echo-message:
                msg: "after build"
          after-push:
            - echo-message:
                msg: "after push"

      - executor-tools/dev-release:
          name: test dev release
          context: *context
          dockerfile: test/Dockerfile.build
          image: twdps/orb-executor-tools
          tag: edge
          snyk-scan: true
          snyk-severity-threshold: medium
          snyk-organization: twdps
          trivy-scan: true
          grype-scan: true
          bats-test: true
          bats-run-container-name: orb-executor-tools-test
          bats-entry-point: /bin/ash
          bats-test-path: test/circleci_remote_docker_alpine.bats
          opencontainer-labels: true
          security-scan-nofail: true
          after-checkout:
            - set-environment
            - echo-message:
                msg: "after checkout"
          before-build:
            - echo-message:
                msg: "before build"
          after-build:
            - echo-message:
                msg: "after build"
          after-push:
            - echo-message:
                msg: "after push"

      - executor-tools/publish:
          name: test publish
          context: *context
          image: twdps/orb-executor-tools
          pull-tag: edge
          version-tag: "0.0.0"
          tag-annotation: alpine-
          release-tag: stable
          sign-image: true
          sbom: true
          after-checkout:
            - set-environment
            - op/write-to-file:
                op-value: empc-lab/svc-cosign-private-key/notesPlain
                out-file: cosign.key
            - op/write-to-file:
                op-value: empc-lab/svc-cosign-public-key/notesPlain
                out-file: cosign.pub
            - echo-message:
                msg: "after checkout"
          before-publish:
            - echo-message:
                msg: "before publish"
          after-publish:
            - echo-message:
                msg: "after publish"
          requires:
            - test dev release
