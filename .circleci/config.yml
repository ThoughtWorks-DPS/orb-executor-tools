---
# ThoughtWorks-DPS executor-tools orb lifecycle based on circleci/orb-tools.
# We refer to this as a 'currated' workflow; meaning, most changes come in the
# form of pull-requests from Forks or story branches of outside Collaborators.

version: 2.1

orbs:
  executor-tools: twdps/executor-tools@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@10.0
  bats: circleci/bats@1.0
  shellcheck: circleci/shellcheck@2.0

# Pipeline parameters used internally by orb-tools. Skip to the Jobs section.
parameters:
  run-integration-tests:
    description: An internal flag to prevent integration tests before a development version has been created.
    type: boolean
    default: false

  dev-orb-version:
    description: >
      The development version of the orb to test.
      This value is automatically adjusted by the "trigger-integration-tests-workflow"
      job to correspond with the specific version created by the commit and should not be edited.
      A "dev:alpha" version must exist for the initial pipeline run.
    type: string
    default: "dev:alpha"

jobs:
  # jobs to perform orb testing of the executor-tools commands
  integration-test-lint:
    docker:
      - image: twdps/di-circleci-base-image:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: setup for lint test
          command: |
            cat \<<EOF > Dockerfile
              FROM scratch
              ADD hello /
              CMD ["/hello"]
            EOF
      - executor-tools/lint

workflows:

  dev-release:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint # yamllint
      - orb-tools/pack # pack orb source
      - shellcheck/check:
          dir: ./src/scripts
          exclude: SC2148
      # optional: Run BATS tests against your scripts
      - bats/run:
          path: ./src/tests
      - hold-for-dev-publish:
          type: approval
          requires:
            - orb-tools/lint
            - orb-tools/pack
            - bats/run
            - shellcheck/check
      # Publish development version(s) of the orb.
      - orb-tools/publish-dev:
          context: twdps-orb-authors
          orb-name: twdps/executor-tools
          requires: [hold-for-dev-publish]
      # Trigger an integration workflow to test the
      # dev:${CIRCLE_SHA1:0:7} version of your orb
      - orb-tools/trigger-integration-tests-workflow:
          context: twdps-orb-authors
          name: trigger-integration-dev
          requires:
            - orb-tools/publish-dev

  # triggered by "trigger-integration-tests-workflow"
  # job, and run tests on <your orb>@dev:${CIRCLE_SHA1:0:7}.
  integration-test-deploy:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      # Run any integration tests defined within the `jobs` key.
      - integration-test-lint
      # Publish a semver version of the orb. relies on
      # the commit subject containing the text "[semver:patch|minor|major|skip]"
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: twdps/executor-tools
          context: twdps-orb-authors
          add-pr-comment: false
          fail-if-semver-not-indicated: true
          publish-version-tag: false
          requires:
            - integration-test-lint
          filters:
            branches:
              only: master
