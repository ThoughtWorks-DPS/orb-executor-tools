# src/jobs/dev-release.yml
# yamllint disable rule:line-length
---
description: Continuous integration and development build of circleci remote-docker executor.

executor:
  name: circleci-executor-builder
  image: << parameters.executor-image-name >>
  resource-class: << parameters.executor-resource-class >>
  registry-login: << parameters.registry-login >>
  registry-password: << parameters.registry-password >>

shell: << parameters.shell >>

parameters:

  shell:
    description: Default shell invocation.
    type: string
    default: /bin/bash -eo pipefail

  executor-image-name:
    description: Remote-docker executor image. Default is twdps/circleci-executor-builder:latest.
    type: string
    default: twdps/circleci-executor-builder:latest

  executor-resource-class:
    description: Executor resource class. Default is medium.
    type: enum
    enum: [medium, medium+, large, xlarge, 2xlarge, 2xlarge+]
    default: medium

  op-version:
    description: Specify specific 1Password CLI version. Default assumes version already installed on executor.
    type: string
    default: ""

  vault-version:
    description: Specify specific Hashi Vault CLI version. Default assumes version already installed on executor.
    type: string
    default: ""

  snyk-version:
    description: Specify specific Snyk CLI version. Default assumes version already installed on executor.
    type: string
    default: ""

  snyk-scan:
    description: Perform Snyk CLI dockerfile and image CVE scan. Default is false.
    type: boolean
    default: false

  snyk-severity-threshold:
    description: Snyk test reporting threshold=[low | medium | high | critical]. Default is critical.
    type: string
    default: "critical"

  snyk-organization:
    description: Organization registered with snyk.io.
    type: string
    default: ""

  snyk-token:
    description: Environment Variable containing Snyk.io api-token. Default is SNYK_TOKEN.
    type: env_var_name
    default: SNYK_TOKEN

  snyk-skip-base-image:
    description: Skip performing CVE scan of base image. Default is false.
    type: boolean
    default: false

  snyk-additional-args:
    description: Additional Snyk CLI command line flags.
    type: string
    default: ""

  bats-version:
    description: Specify specific Bats CLI version. Default assumes version already installed on executor.
    type: string
    default: ""

  bats-test:
    description: Run bats container configuration health check. Default is false.
    type: boolean
    default: false

  bats-run-container-name:
    description: Name assigned to running container. Default is container-test.
    type: string
    default: container-test

  bats-entry-point:
    description: Name of shell entrypoint for bats test. Default is /bin/bash.
    type: string
    default: /bin/bash

  bats-test-path:
    description: Name of folder with tests. Default is test.
    type: string
    default: test

  hadolint-version:
    description: Specify specific Hadolint CLI version. Default assumes version already installed on executor.
    type: string
    default: ""

  hadolint-additional-args:
    description: Additional Hadolint CLI command line flags.
    type: string
    default: ""

  trivy-version:
    description: Specify specific Trivy CLI version. Default assumes version already installed on executor.
    type: string
    default: ""

  trivy-scan:
    description: Perform Trivy CLI image scan. Default is false.
    type: boolean
    default: false

  trivy-severity:
    description: Each Trivy CLI scan desired reporting threshold level="UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL". Default is "CRITICAL".
    type: string
    default: "CRITICAL"

  trivy-additional-args:
    description: Additional Trivy CLI command line flags.
    type: string
    default: ""

  grype-version:
    description: Specify specific Grype CLI version. Default assumes version already installed on executor.
    type: string
    default: ""

  grype-scan:
    description: Perform Grype CLI image scan. Default is false.
    type: boolean
    default: false

  grype-severity:
    description: Grype CLI scan reporting threshold=[negligible | low | medium | high | critical]. Default is critical.
    type: string
    default: "critical"

  grype-additional-args:
    description: Additional Gryp CLI command line flags
    type: string
    default: ""

  security-scan-nofail:
    description: Instead of the pipeline failing, generate scan results as saved artifact. Default is false.
    type: boolean
    default: false

  dockerfile:
    description: Name of dockerfile. Default is Dockerfile.
    type: string
    default: Dockerfile

  path:
    description: Path to the directory containing your Dockerfile and build context.  Default is "."
    type: string
    default: .

  registry:
    description: Name of registry. Default is docker.io
    type: string
    default: docker.io

  registry-login:
    description: Environment variable containing Username for reigstry access. Default is DOCKER_LOGIN.
    type: env_var_name
    default: DOCKER_LOGIN

  registry-password:
    description: Environment variable containing Password for reigstry access. Default is DOCKER_PASSWORD.
    type: env_var_name
    default: DOCKER_PASSWORD

  image:
    description: Name of image.
    type: string

  tag:
    description: Value for dev build tag. Default is dev.${CIRCLE_SHA1:0:7}.
    type: string
    default: dev.${CIRCLE_SHA1:0:7}

  tag-annotation:
    description: Additional text prepended to semantic version tag.
    type: string
    default: ""

  extra-build-args:
    description: Extra flags to pass to docker build.
    type: string
    default: ""

  opencontainer-labels:
    description: |
      Set opencontainer created, version, and base.name labels. Default is false.
        org.opencontainers.image.created="%Y-%m-%dT%H:%M:%SZ"
        org.opencontainers.image.version="CIRCLE_SHA1"
        org.opencontainers.image.base.name="FROM line of Dockerfile"
    type: boolean
    default: false

  after-checkout:
    description: Optional steps to run after checking out the code.
    type: steps
    default: []

  before-build:
    description: Optional steps to run before building the docker image.
    type: steps
    default: []

  after-build:
    description: Optional steps to run after building the docker image.
    type: steps
    default: []

  after-push:
    description: Optional steps to run after pushing the dev release docker image.
    type: steps
    default: []

steps:
  - checkout
  - setup_remote_docker
  - install:
      op-version: << parameters.op-version >>
      vault-version: << parameters.vault-version >>
      snyk-version: << parameters.snyk-version >>
      bats-version: << parameters.bats-version >>
      hadolint-version: << parameters.hadolint-version >>
      trivy-version: << parameters.trivy-version >>
      grype-version: << parameters.grype-version >>
  - when:
      name: Run after-checkout lifecycle hook steps
      condition: << parameters.after-checkout >>
      steps: << parameters.after-checkout >>
  - run:
      name: setup artifact workspace
      command: mkdir -p workspace
  - lint:
      dockerfile: << parameters.dockerfile >>
      hadolint-additional-args: << parameters.hadolint-additional-args >>
  - confirm-registry:
      registry: << parameters.registry >>
      registry-login: << parameters.registry-login >>
      registry-password: << parameters.registry-password >>
  - when:
      name: Run before-build lifecycle hook steps
      condition: << parameters.before-build >>
      steps: << parameters.before-build >>
  - when:
      name: set org.opencontainer creation date, version, and base.name labels
      condition: << parameters.opencontainer-labels >>
      steps:
        - set-labels:
            dockerfile: << parameters.dockerfile >>
  - build:
      dockerfile: << parameters.dockerfile >>
      path: << parameters.path >>
      image: << parameters.image >>
      tag: << parameters.tag-annotation >><< parameters.tag >>
      registry: << parameters.registry >>
      extra-build-args: << parameters.extra-build-args >>
  - when:
      name: Perform Snyk CLI CVE scan
      condition: << parameters.snyk-scan >>
      requires:
        - build
      steps:
        - snyk-scan:
            registry: << parameters.registry >>
            image: << parameters.image >>
            tag: << parameters.tag-annotation >><< parameters.tag >>
            dockerfile: << parameters.dockerfile >>
            snyk-severity-threshold: << parameters.snyk-severity-threshold >>
            snyk-organization: << parameters.snyk-organization >>
            snyk-token: << parameters.snyk-token >>
            snyk-skip-base-image: << parameters.snyk-skip-base-image >>
            snyk-additional-args: << parameters.snyk-additional-args >>
            security-scan-nofail: << parameters.security-scan-nofail >>
  - when:
      name: Perform Trivy CLI image scan
      condition: << parameters.trivy-scan >>
      requires:
        - build
      steps:
        - trivy-scan:
            registry: << parameters.registry >>
            image: << parameters.image >>
            tag: << parameters.tag-annotation >><< parameters.tag >>
            dockerfile: << parameters.dockerfile >>
            trivy-severity: << parameters.trivy-severity >>
            trivy-additional-args: << parameters.trivy-additional-args >>
            security-scan-nofail: << parameters.security-scan-nofail >>
  - when:
      name: Perform Grype CLI image scan
      condition: << parameters.grype-scan >>
      requires:
        - build
      steps:
        - grype-scan:
            registry: << parameters.registry >>
            image: << parameters.image >>
            tag: << parameters.tag-annotation >><< parameters.tag >>
            dockerfile: << parameters.dockerfile >>
            grype-severity: << parameters.grype-severity >>
            grype-additional-args: << parameters.grype-additional-args >>
            security-scan-nofail: << parameters.security-scan-nofail >>
  - when:
      name: Run bats container configuration health check
      condition: << parameters.bats-test >>
      requires:
        - build
      steps:
        - bats:
            registry: << parameters.registry >>
            image: << parameters.image >>
            tag: << parameters.tag-annotation >><< parameters.tag >>
            bats-run-container-name: << parameters.bats-run-container-name >>
            bats-entry-point: << parameters.bats-entry-point >>
            bats-test-path: << parameters.bats-test-path >>
  - when:
      name: Run after-build lifecycle hook steps.
      condition: << parameters.after-build >>
      steps: << parameters.after-build >>
  - push:
      registry: << parameters.registry >>
      image: << parameters.image >>
      tag: << parameters.tag-annotation >><< parameters.tag >>
  - when:
      name: Run after-push lifecycle hook steps
      condition: << parameters.after-push >>
      steps: << parameters.after-push >>
  - persist-workspace
