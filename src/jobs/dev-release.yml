# src/jobs/dev-release.yml
# yamllint disable rule:line-length
---
description: Continuous integration and development build of circleci remote-docker executor.

executor:
  name: circleci-executor-builder
  image: << parameters.executor-image-name >>
  resource-class: << parameters.executor-resource-class >>
  registry-login: << parameters.registry-login >>
  registry-password: << parameters.registry-password >>

shell: << parameters.shell >>

parameters:

  shell:
    description: default shell invocation. Override to support different shells or tools like 1password
    type: string
    default: /bin/bash -eo pipefail

  executor-image-name:
    description: specify docker executor image
    type: string
    default: twdps/circleci-executor-builder:alpine-stable

  executor-resource-class:
    description: specify executor resource class. Default is medium.
    type: enum
    enum: [medium, large, xlarge, 2xlarge, 2xlarge+]
    default: medium

  op-version:
    type: string
    default: ""

  teller-version:
    type: string
    default: ""

  vault-version:
    type: string
    default: ""

  conftest-version:
    type: string
    default: ""

  cis-docker-image-scan:
    description: perform CIS Docker Benchmark section 4 scan
    type: boolean
    default: false

  snyk-version:
    type: string
    default: ""

  snyk-scan:
    description: perform snyk.io docker cve scan
    type: boolean
    default: false

  snyk-severity-threshold:
    description: snyk test reporting threshold
    type: string
    default: "low"

  snyk-organization:
    description: organization registered with snyk.io
    type: string
    default: ""

  snyk-token:
    description: snyk.io api-token
    type: env_var_name
    default: SNYK_TOKEN

  snyk-skip-base-image:
    description: optionally, skip performing cve scan of base image
    type: boolean
    default: false

  snyk-additional-args:
    description: additional custom command line flags
    type: string
    default: ""

  bats-version:
    type: string
    default: ""

  bats-test:
    description: Run container configuration check bats test
    type: boolean
    default: false

  bats-run-container-name:
    description: name for running container
    type: string
    default: container-test

  bats-entry-point:
    description: name of shell ( bash | ash | etc)
    type: string
    default: /bin/bash

  bats-test-path:
    description: Name of folder with tests
    type: string
    default: test

  hadolint-version:
    type: string
    default: ""

  hadolint-additional-args:
    description: additional custom command line flags
    type: string
    default: ""

  trivy-version:
    type: string
    default: ""

  trivy-scan:
    description: perform trivy image scan
    type: boolean
    default: false

  trivy-severity:
    description: trivy scan reporting threshold
    type: string
    default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"

  trivy-additional-args:
    description: additional custom command line flags
    type: string
    default: ""

  grype-version:
    type: string
    default: ""

  grype-scan:
    description: perform grype image scan
    type: boolean
    default: false

  grype-severity:
    description: trivy scan reporting threshold
    type: string
    default: "medium"

  grype-additional-args:
    description: additional custom command line flags
    type: string
    default: ""

  dockerfile:
    description: Name of dockerfile
    type: string
    default: Dockerfile

  path:
    description: Path to the directory containing your Dockerfile and build context
    type: string
    default: .

  registry:
    description: Name of registry
    type: string
    default: docker.io

  registry-login:
    description: username for reigstry access
    type: env_var_name
    default: DOCKER_LOGIN

  registry-password:
    description: password for registry access
    type: env_var_name
    default: DOCKER_PASSWORD

  image:
    description: Name of image
    type: string

  tag:
    description: Value for dev build tag
    type: string
    default: dev.${CIRCLE_SHA1:0:7}

  tag-annotation:
    description: Additional text prepended to semantic version tag
    type: string
    default: ""

  extra-build-args:
    description: >
      Extra flags to pass to docker build. For examples, see
      https://docs.docker.com/engine/reference/commandline/build
    type: string
    default: ""

  opencontainer-labels:
    description: set org.opencontainer creation date and version labels
    type: boolean
    default: false

  after-checkout:
    description: Optional steps to run after checking out the code.
    type: steps
    default: []

  before-build:
    description: Optional steps to run before building the docker image.
    type: steps
    default: []

  after-build:
    description: Optional steps to run after building the docker image.
    type: steps
    default: []

  after-push:
    description: Optional steps to run after pushing the dev release docker image.
    type: steps
    default: []

steps:
  - checkout
  - setup_remote_docker
  - install:
      op-version: << parameters.op-version >>
      teller-version: << parameters.teller-version >>
      vault-version: << parameters.vault-version >>
      conftest-version: << parameters.conftest-version >>
      snyk-version: << parameters.snyk-version >>
      bats-version: << parameters.bats-version >>
      hadolint-version: << parameters.hadolint-version >>
      trivy-version: << parameters.trivy-version >>
      grype-version: << parameters.grype-version >>
  - when:
      name: Run after-checkout lifecycle hook steps.
      condition: << parameters.after-checkout >>
      steps: << parameters.after-checkout >>
  - lint:
      dockerfile: << parameters.dockerfile >>
      hadolint-additional-args: << parameters.hadolint-additional-args >>
  - confirm-registry:
      registry: << parameters.registry >>
      registry-login: << parameters.registry-login >>
      registry-password: << parameters.registry-password >>
  - when:
      name: Run before-build lifecycle hook steps.
      condition: << parameters.before-build >>
      steps: << parameters.before-build >>
  - when:
      name: perform CIS Docker Benchmark section 4 scan
      condition: << parameters.cis-docker-image-scan >>
      steps:
        - cis-scan:
            dockerfile: << parameters.dockerfile >>
  - when:
      name: set org.opencontainer creation date and version labels
      condition: << parameters.opencontainer-labels >>
      steps:
        - set-labels:
            dockerfile: << parameters.dockerfile >>
  - build:
      dockerfile: << parameters.dockerfile >>
      path: << parameters.path >>
      image: << parameters.image >>
      tag: << parameters.tag-annotation >><< parameters.tag >>
      registry: << parameters.registry >>
      extra-build-args: << parameters.extra-build-args >>
  - when:
      name: Perform snyk cve scan
      condition: << parameters.snyk-scan >>
      requires:
        - build
      steps:
        - snyk-scan:
            registry: << parameters.registry >>
            image: << parameters.image >>
            tag: << parameters.tag-annotation >><< parameters.tag >>
            dockerfile: << parameters.dockerfile >>
            snyk-severity-threshold: << parameters.snyk-severity-threshold >>
            snyk-organization: << parameters.snyk-organization >>
            snyk-token: << parameters.snyk-token >>
            snyk-skip-base-image: << parameters.snyk-skip-base-image >>
            snyk-additional-args: << parameters.snyk-additional-args >>
  - when:
      name: Perform trivy image scan
      condition: << parameters.trivy-scan >>
      requires:
        - build
      steps:
        - trivy-scan:
            registry: << parameters.registry >>
            image: << parameters.image >>
            tag: << parameters.tag-annotation >><< parameters.tag >>
            dockerfile: << parameters.dockerfile >>
            trivy-severity: << parameters.trivy-severity >>
            trivy-additional-args: << parameters.trivy-additional-args >>
  - when:
      name: Perform grype image scan
      condition: << parameters.grype-scan >>
      requires:
        - build
      steps:
        - grype-scan:
            registry: << parameters.registry >>
            image: << parameters.image >>
            tag: << parameters.tag-annotation >><< parameters.tag >>
            dockerfile: << parameters.dockerfile >>
            grype-severity: << parameters.grype-severity >>
            grype-additional-args: << parameters.grype-additional-args >>
  - when:
      name: perform bats container configuration test
      condition: << parameters.bats-test >>
      requires:
        - build
      steps:
        - bats:
            registry: << parameters.registry >>
            image: << parameters.image >>
            tag: << parameters.tag-annotation >><< parameters.tag >>
            bats-run-container-name: << parameters.bats-run-container-name >>
            bats-entry-point: << parameters.bats-entry-point >>
            bats-test-path: << parameters.bats-test-path >>
  - when:
      name: Run after-build lifecycle hook steps.
      condition: << parameters.after-build >>
      steps: << parameters.after-build >>
  - push:
      registry: << parameters.registry >>
      image: << parameters.image >>
      tag: << parameters.tag-annotation >><< parameters.tag >>
  - when:
      name: Run after-push lifecycle hook steps.
      condition: << parameters.after-push >>
      steps: << parameters.after-push >>
