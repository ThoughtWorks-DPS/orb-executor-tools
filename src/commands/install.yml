# src/commands/install.yml
# yamllint disable rule:line-length
---
description: |
  The executor-tools orb expects a number of packages beyond those
  that are already available on cimg:base or twdps/circleci-base-iamge.

  The recommended practice is to create a custom executor that already
  has the required packages so that pipelines using the orb do not
  need to repeatedly install the same packages with each job run.

  This orb will use the twdps/circleci-executor-builder by default
  and you can review the executor repo for an example of how to
  manage such a custom image. You may also override the default with
  your own custom image.

  There may be situations in which you need to override the particular
  version of the tool used by the executor-tools orb or, in the case
  of using the optional machine-executor-dev-release, a means of installing
  all the required tools.

  This command will install the specified version of a package if
  a version is provided or do nothing if not. The executor-tools
  jobs uses the command to provide a means of overriding the
  default action.

parameters:

  op-version:
    description: Install 1Password CLI version if provided.
    type: string
    default: ""

  teller-version:
    description: Install Teller CLI version if provided.
    type: string
    default: ""

  vault-version:
    description: Install Hashi Vault CLI version if provided.
    type: string
    default: ""

  snyk-version:
    description: Install Snyk CLI npm module version if provided.
    type: string
    default: ""

  bats-version:
    description: Install Bats CLI npm mpdule version if provided.
    type: string
    default: ""

  hadolint-version:
    description: Install Hadolint CLI version if provided.
    type: string
    default: ""

  trivy-version:
    description: Install Trivy CLI version if provided.
    type: string
    default: ""

  grype-version:
    description: Install Grype CLI version if provided.
    type: string
    default: ""

  cosign-version:
    description: Install Cosign CLI version if provided.
    type: string
    default: ""

  syft-version:
    description: Install Syft CLI version if provided.
    type: string
    default: ""

  oras-version:
    description: Install Oras CLI version if provided.
    type: string
    default: ""

  gren-version:
    description: Install github-release-notes version if provided.
    type: string
    default: ""

steps:

  - when:
      condition: << parameters.op-version >>
      steps:
        - run:
            name: install 1password-cli version << parameters.op-version >>
            environment:
              OP_VERSION: << parameters.op-version >>
            command: <<include(scripts/install_1password.sh)>>

  - when:
      condition: << parameters.teller-version >>
      steps:
        - run:
            name: install teller version << parameters.teller-version >>
            environment:
              TELLER_VERSION: << parameters.teller-version >>
            command: <<include(scripts/install_teller.sh)>>

  - when:
      condition: << parameters.vault-version >>
      steps:
        - run:
            name: install vault version << parameters.vault-version >>
            environment:
              VAULT_VERSION: << parameters.vault-version >>
            command: <<include(scripts/install_vault.sh)>>

  - when:
      condition: << parameters.snyk-version >>
      steps:
        - run:
            name: install snyk version << parameters.snyk-version >>
            environment:
              SNYK_VERSION: << parameters.snyk-version >>
            command: <<include(scripts/install_snyk.sh)>>

  - when:
      condition: << parameters.bats-version >>
      steps:
        - run:
            name: install bats version << parameters.bats-version >>
            environment:
              BATS_VERSION: << parameters.bats-version >>
            command: <<include(scripts/install_bats.sh)>>

  - when:
      condition: << parameters.gren-version >>
      steps:
        - run:
            name: install gren version << parameters.gren-version >>
            environment:
              GREN_VERSION: << parameters.gren-version >>
            command: <<include(scripts/install_gren.sh)>>

  - when:
      condition: << parameters.hadolint-version >>
      steps:
        - run:
            name: install hadolint version << parameters.hadolint-version >>
            environment:
              HADOLINT_VERSION: << parameters.hadolint-version >>
            command: <<include(scripts/install_hadolint.sh)>>

  - when:
      condition: << parameters.trivy-version >>
      steps:
        - run:
            name: install trivy version << parameters.trivy-version >>
            environment:
              TRIVY_VERSION: << parameters.trivy-version >>
            command: <<include(scripts/install_trivy.sh)>>

  - when:
      condition: << parameters.grype-version >>
      steps:
        - run:
            name: install grype version << parameters.grype-version >>
            environment:
              GRYPE_VERSION: << parameters.grype-version >>
            command: <<include(scripts/install_grype.sh)>>

  - when:
      condition: << parameters.cosign-version >>
      steps:
        - run:
            name: install cosign version << parameters.cosign-version >>
            environment:
              COSIGN_VERSION: << parameters.cosign-version >>
            command: <<include(scripts/install_cosign.sh)>>

  - when:
      condition: << parameters.oras-version >>
      steps:
        - run:
            name: install oras version << parameters.oras-version >>
            environment:
              ORAS_VERSION: << parameters.oras-version >>
            command: <<include(scripts/install_oras.sh)>>

  - when:
      condition: << parameters.syft-version >>
      steps:
        - run:
            name: install syft version << parameters.syft-version >>
            environment:
              SYFT_VERSION: << parameters.syft-version >>
            command: <<include(scripts/install_syft.sh)>>
