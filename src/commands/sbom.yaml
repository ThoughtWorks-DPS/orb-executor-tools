# src/commands/sbom.yaml

description: generate sbom for the image and write to OCI compatible registry. Assumes manifestif is present.

parameters:

  registry:
    description: full registry path for writing signature
    type: string
    default: docker.io

  registry-login:
    description: username for reigstry access
    type: env_var_name
    default: DOCKER_LOGIN

  registry-password:
    description: password for registry access
    type: env_var_name
    default: DOCKER_PASSWORD

  sbom-filename:
    description: name of generate sbom file
    type: string
    default: sbom.spdx

  honeycomb-trace:
    description: send honeycomb buildevent trace metrics
    type: boolean
    default: false

steps:
  - when:
      name: start sbom span
      condition: << parameters.honeycomb-trace >>
      steps:
        - run: echo "STEP_START=$(date +%s)" >> $BASH_ENV
        - run: echo "STEP_SPAN_ID=$(echo sbom | sum | cut -f 1 -d \ )" >> $BASH_ENV
  - run:
      name: generate sbom using syft
      command: syft packages --output spdx-json $(cat manifestid) > << parameters.sbom-filename >>
  - run:
      name: push sbom to container registry
      command: |
        echo ${<< parameters.registry-password >>} | oras login << parameters.registry >> -u ${<< parameters.registry-login >>} --password-stdin
        oras push --artifact-type 'sbom' docker.io/$(cat manifestid | sed 's/:/-/g' | sed 's/@/:/g').spdx << parameters.sbom-filename >>:application/json
  - when:
      name: stop sbom span
      condition: << parameters.honeycomb-trace >>
      steps:
        - run:
            name: finishing span for sbom
            command: buildevents step $CIRCLE_WORKFLOW_ID $STEP_SPAN_ID $STEP_START sbom
            when: always 